@{
    ViewBag.Title = "Home Page";
}
<!-- Modal VR display -->
<div class="modal fade" id="vrModal" tabindex="-1" role="dialog" aria-labelledby="vrModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="vrModalLabel">Value Representation Codes</h4>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr class="success">
                            <td>VR</td>
                            <td>Max Size (Bytes)</td>
                            <td>Description</td>
                        </tr>
                    </thead>
                    <tr><td>AE</td><td>16 </td><td>Application Name</td></tr>
                    <tr><td>AS</td><td>4</td><td>Age String: nnnW or nnnM or nnnY</td></tr>
                    <tr><td>AT</td><td>4</td><td>Attribute Tag a UInt32</td></tr>
                    <tr><td>CS</td><td>16 </td><td>Code String</td></tr>
                    <tr><td>DA</td><td>8</td><td>Date yyyymmdd (check for yyyy.mm.dd also and convert)</td></tr>
                    <tr><td>DS</td><td>16 </td><td>Decimal <strong>String</strong>.Can start with + or - and may be padded with l or t space</td></tr>
                    <tr><td>DT</td><td>26 </td><td>Date Time YYYYMMDDHHMMSS.FFFFFF&amp;ZZZZ (&amp;ZZZ is optional & = + or -)</td></tr>
                    <tr><td>FL</td><td>4</td><td>Single precision floating point binary number (float)</td></tr>
                    <tr><td>FD</td><td>16 </td><td>Double precision floating point binary number (double)</td></tr>
                    <tr><td>IS</td><td>12 </td><td>Integer encoded <strong>String</strong>. It may be padded</td></tr>
                    <tr><td>LO</td><td>64 </td><td>Character string. can be padded. Cannot contain \ or any control chars except ESC</td></tr>
                    <tr><td>LT</td><td>10240</td><td>Long Text. Leading spaces are significant. trailing spaces arent</td></tr>
                    <tr><td>OB</td><td>Any</td><td>Other bytes (meaning byte blob) with a single trailing 0x00 to make even number of bytes. May contain frame sequences.</td></tr>
                    <tr><td>OF</td><td>Any</td><td>Other Float</td></tr>
                    <tr><td>OW</td><td>Any</td><td>Other Word (meaning 16-bit blob)</td></tr>
                    <tr><td>PN</td><td>Any</td><td>Person's Name 64 byte max per component. 5 components like this: Washington^Georgia^Mary^Jr^III</td></tr>
                    <tr><td>SH</td><td>16 </td><td>Short String. may be padded</td></tr>
                    <tr><td>SL</td><td>4</td><td>Signed long integer (Int32)</td></tr>
                    <tr><td>SQ</td><td>Any</td><td>Sequence of zero or more items</td></tr>
                    <tr><td>SS</td><td>2</td><td>Signed short integer (Int16)</td></tr>
                    <tr><td>ST</td><td>1024 </td><td>Short Text of chars</td></tr>
                    <tr><td>TM</td><td>16 </td><td>Time hhmmss.fraction (or older format: hh:mm:ss.fraction)</td></tr>
                    <tr><td>UI</td><td>64 </td><td>Unique Identifier (delimiter = .) 0-9 only, add a space to make even length</td></tr>
                    <tr><td>UL</td><td>4</td><td>Unsigned long integer</td></tr>
                    <tr><td>UN</td><td>Any</td><td>Unknown - This is usually an non-parsable DICOM element.</td></tr>
                    <tr><td>US</td><td>2</td><td>Unsigned short integer (UInt16)</td></tr>
                    <tr><td>UT</td><td>Any</td><td>Unlimited Text. Trailing spaces are ignored</td></tr>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="jumbotron">   
    <div class="text-center">
        <h2>DICOM Dictionary Lookup</h2>
        <p>Go Ahead, Enter a Tag or a Any Part of Dictionary Description</p>
        <p><input placeholder="00100020 or Patient" type="text" id="tag" size="80"/></p>
        <input class="btn btn-lg btn-success"  id="find" type="button" value="Search" onclick="find();" />
    </div>
</div>
<div class="well">

    <div id="dropZone">
        <div class="text-center">
            <h2>Or, Use HTML-5 DICOM File Dump</h2>
            <h3>Yes! Go Ahead, Drag &amp; Drop Your Part-10 File Here</h3>
            Your file is dumped using pure local JavaScript. Nothing is uploaded to the server!
        </div>
        <div id="status" class="alert alert-success">
            <div id="statusText">
                Status: Ready (no file loaded)
            </div>
            <ul id="warnings"></ul>
        </div>
    </div>
</div>
<div class="well" id="result"></div>
<div class="well">
    <h3>Example Queries:</h3>
    <table class="table">
        <tr>
            <td>00100020</td>
            <td>Simplest way to type in a tag. Just Num Lock your keys and type the tag away.</td>
        </tr>
        <tr>
            <td>0028</td>
            <td>Specify just the first 4 digits of a tag and list the entier DICOM "group". </td>
        </tr>
        <tr>
            <td>(0010,0020)</td>
            <td>No need to edit out parenthesis or a comma! Just paste the tag in from wherever you copy it from.</td>
        </tr>
        <tr>
            <td>patient id</td>
            <td>
                If text is typed in, then I know you mean it's a dictionary definition that you are looking for. Also in DICOM Dictionary, many Patient related decriptions are
                having 's like Patient's Name. No need to worry about which way it is -- with an ' or without. The descriptions are taken directly from the Part 6 of the standard!
            </td>
        </tr>
        <tr>
            <td>everything</td>
            <td>
                Dump all the entires this program has. Hint: It is a great way to copy the Dictionary into a JSON format if you use the RESTful interface. See below!
            </td>
        </tr>

    </table>
    <p>See also: There is a pure JavaScript HTML5 based DICOM Dump.
        <a href="https://rawgit.com/chafey/dicomParser/master/examples/dumpWithDataDictionary/index.html">Click Here</a> then drag and drop your DICOM File Object!
    </p>
</div>
<div class="well">
    <h3>Your JavaScript app can access this lookup service's RESTful back end with the following URL.</h3>
    <p>Examples:</p>
    <p>http://dicomdictionaryservice.azurewebsite.net/lookup/00100010</p>
    <p>http://dicomdictionaryservice.azurewebsite.net/lookup/PatientName</p>
</div>

<script src="~/Scripts/jquery-2.1.1.min.js"></script>
<script src="~/Scripts/dicomParser.js"></script>
<script src="~/Scripts/dataDictionary.js"></script>
<script src="~/Scripts/dicomDump.js"></script>

<script src="~/Scripts/find.js"></script>
